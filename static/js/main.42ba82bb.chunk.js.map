{"version":3,"sources":["actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","components/Input.js","pages/Login.js","components/Header.js","components/Select.js","components/ExpensesTable.js","components/Expense.js","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["getCurrencies","currencies","type","fetchAPI","expenseData","dispatch","a","fetch","response","json","data","Object","keys","filter","currencie","expenses","exchangeRates","console","log","INITIAL_STATE","email","user","state","action","editBtn","expenseSelected","wallet","id","selectedExpense","expenseLength","length","expenseIndex","findIndex","expense","beforeExpense","slice","afterExpense","editedExpense","editInfo","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Input","this","props","name","value","placeholder","onChange","className","data-testid","htmlFor","Component","Login","inputValidation","password","emailTest","test","passwordTest","setState","btnDisabled","inputHandler","target","loginHandler","history","sentEmail","push","onClick","disabled","React","connect","getUserEmail","Header","expenseSum","map","currency","Number","ask","reduce","acc","toFixed","Select","selectList","itemList","item","index","key","options","ExpensesTable","pressEditBtn","activeEdition","disableEdition","getEditState","renderExpenses","removeExpenseById","description","method","tag","coin","exchangeRate","exchangeValue","expenseValues","expenseValue","headTitle","removeExpense","METHODS","CATEGORIES","Expense","cleanFormsState","prevState","sentExpenseToStore","addExpenses","editExpenseToStore","editingExpense","editExpense","Wallet","getApiResponse","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.42ba82bb.chunk.js","sourcesContent":["export const GET_USER_EMAIL = 'GET_USER_EMAIL';\nexport const GET_CURRENCIES = 'GET_CURRENCIES';\nexport const ADD_EXPENSE = 'ADD_EXPENSE';\nexport const REMOVE_EXPENSE = 'REMOVE_EXPENSE';\nexport const ACTIVE_EDIT_BUTTON = 'ACTIVE_EDIT_BUTTON';\nexport const DISABLE_EDIT_BUTTON = 'DISABLE_EDIT_BUTTON';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\n\nexport const getUserEmail = (email) => ({ type: GET_USER_EMAIL, email });\n\nexport const getCurrencies = (currencies) => ({ type: GET_CURRENCIES, currencies });\n\nexport const addExpense = (expenses, exchangeRates) => (\n  { type: ADD_EXPENSE, expenses, exchangeRates });\n\nexport const editExpense = (expense, editInfo) => (\n  { type: EDIT_EXPENSE, expense, editInfo });\n\nexport const removeExpense = (id) => ({ type: REMOVE_EXPENSE, id });\n\nexport const activeEditButton = (selectedExpense) => (\n  { type: ACTIVE_EDIT_BUTTON, selectedExpense });\n\nexport const disableEditButton = () => ({ type: DISABLE_EDIT_BUTTON });\n\nexport const fetchAPI = (type, expenseData) => async (dispatch) => {\n  try {\n    const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n    const data = await response.json();\n    const currencies = Object.keys(data).filter((currencie) => currencie !== 'USDT');\n    // const exchangeRates = currencies.reduce((acc, codeName) => {\n    //   acc[codeName] = data[codeName];\n    //   return acc;\n    // }, {});\n    if (type === 'currencies') return dispatch(getCurrencies(currencies));\n    if (type === 'addExpense') return dispatch(addExpense(expenseData, data));\n    // if (type === 'editExpense') return dispatch(editExpense(expenseData, data, id));\n  } catch (error) {\n    console.log(`Erro encontrado: ${error}`);\n  }\n};\n","import { GET_USER_EMAIL } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_USER_EMAIL:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { GET_CURRENCIES, ADD_EXPENSE, REMOVE_EXPENSE,\n  ACTIVE_EDIT_BUTTON, DISABLE_EDIT_BUTTON, EDIT_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  editBtn: false,\n  expenseSelected: {},\n};\n\nexport const wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_CURRENCIES:\n    return {\n      ...state,\n      currencies: action.currencies,\n    };\n  case ADD_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses,\n        { ...action.expenses, exchangeRates: action.exchangeRates }],\n    };\n  case REMOVE_EXPENSE: {\n    const expenses = state.expenses.filter(({ id }) => id !== action.id);\n    return {\n      ...state,\n      expenses,\n    };\n  }\n  case ACTIVE_EDIT_BUTTON:\n    return {\n      ...state,\n      editBtn: true,\n      expenseSelected: action.selectedExpense,\n    };\n  case DISABLE_EDIT_BUTTON:\n    return {\n      ...state,\n      editBtn: false,\n      expenseSelected: {},\n    };\n  case EDIT_EXPENSE: {\n    const expenseLength = state.expenses.length;\n    const expenseIndex = state.expenses.findIndex(({ id }) => id === action.expense.id);\n    const beforeExpense = state.expenses.slice(0, expenseIndex);\n    const afterExpense = state.expenses.slice(expenseIndex + 1, expenseLength);\n    const editedExpense = { ...action.editInfo,\n      id: action.expense.id,\n      exchangeRates: action.expense.exchangeRates };\n    const expenses = [...beforeExpense, editedExpense, ...afterExpense];\n    return {\n      ...state,\n      expenses,\n      editBtn: false,\n      expenseSelected: {},\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Input extends Component {\n  render() {\n    const { name, type, value, placeholder, onChange } = this.props;\n    return (\n      <div className=\"form-floating  m-2\">\n        <input\n          data-testid={ `${name}-input` }\n          name={ name }\n          id={ `input-${name}` }\n          className=\"form-control\"\n          type={ type }\n          placeholder={ placeholder }\n          onChange={ onChange }\n          value={ value }\n        />\n        <label htmlFor={ `input-${name}` }>{ placeholder }</label>\n      </div>\n    );\n  }\n}\n\nInput.propTypes = {\n  name: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n}.isRequired;\n\nexport default Input;\n","import React from 'react';\nimport '../styles/login.css';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { getUserEmail } from '../actions';\n\nimport Input from '../components/Input';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      btnDisabled: true,\n    };\n  }\n\n  inputValidation = () => {\n    const { email, password } = this.state;\n\n    const passwordMinLength = 6;\n\n    const regex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g; // fonte regex https://regexr.com/3e48o\n\n    const emailTest = regex.test(email);\n    const passwordTest = password.length >= passwordMinLength;\n\n    this.setState({ btnDisabled: !(emailTest && passwordTest) });\n  }\n\n  inputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.inputValidation());\n  }\n\n  loginHandler = () => {\n    const { history, sentEmail } = this.props;\n    const { email } = this.state;\n    sentEmail(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    const { email, password, btnDisabled } = this.state;\n    return (\n      <div className=\"main-container\">\n        <div className=\"login-container\">\n\n          <h1 className=\"main-title\">TrybeWallet</h1>\n\n          <div>\n            <Input\n              name=\"email\"\n              type=\"Text\"\n              placeholder=\"Email\"\n              onChange={ this.inputHandler }\n              value={ email }\n            />\n\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={ this.inputHandler }\n              value={ password }\n            />\n\n            <div className=\"d-grid col-6 mx-auto\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning btn-lg cursor-na\"\n                onClick={ this.loginHandler }\n                disabled={ btnDisabled }\n              >\n                Entrar\n\n              </button>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  sentEmail: PropTypes.func,\n}.isRequired;\n\nconst mapDispatchToProps = (dispatch) => ({\n  sentEmail: (email) => dispatch(getUserEmail(email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nclass Header extends Component {\n  expenseSum = () => {\n    const { expenses } = this.props;\n    const totalExpense = expenses\n      .map(({ value, currency, exchangeRates }) => (\n        value * Number(exchangeRates[currency].ask)))\n      .reduce((acc, value) => acc + value, 0);\n    return totalExpense.toFixed(2);\n  }\n\n  render() {\n    const { email } = this.props;\n    return (\n      <header className=\"header-container\">\n        <h1 className=\"main-title\">\n          TrybeWallet\n        </h1>\n        <div className=\"header-user-info\">\n          <span>\n            Email:\n            {' '}\n            <strong data-testid=\"email-field\">{ email }</strong>\n          </span>\n          <span>\n            Despesa Total:\n            {' '}\n            <strong>\n              R$:\n              {' '}\n              <span data-testid=\"total-field\">{ this.expenseSum() }</span>\n              <span data-testid=\"header-currency-field\">BRL</span>\n            </strong>\n          </span>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Select extends Component {\n  selectList = (itemList, name) => itemList.map((item, index) => (\n    <option\n      key={ `${index}-${item}` }\n      value={ item }\n      name={ name }\n    >\n      {item}\n\n    </option>\n  ))\n\n  render() {\n    const { name, value, onChange, options, placeholder } = this.props;\n    return (\n      <div className=\"form-floating  m-1\">\n        <select\n          data-testid={ `${name}-input` }\n          id={ `${name}-id` }\n          className=\"form-select\"\n          name={ name }\n          value={ value }\n          onChange={ onChange }\n        >\n          {this.selectList(options, name)}\n        </select>\n        <label htmlFor={ `${name}-id` }>\n          { placeholder }\n        </label>\n      </div>\n    );\n  }\n}\n\nSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  options: PropTypes.string,\n  placeholder: PropTypes.string,\n}.isRequired;\n\nexport default Select;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { removeExpense, activeEditButton, disableEditButton } from '../actions';\n\nclass ExpensesTable extends Component {\n  pressEditBtn =async (expense) => {\n    const { activeEdition, disableEdition, editBtn, getEditState } = this.props;\n\n    if (editBtn) {\n      disableEdition();\n    } else {\n      await activeEdition(expense);\n      getEditState();\n    }\n  }\n\n  renderExpenses = () => {\n    const { expenses, removeExpenseById, expenseSelected = { id: 'none' } } = this.props;\n    return expenses.map((expense) => {\n      const { id, value, description, currency, method, tag,\n        exchangeRates } = expense;\n      const coin = exchangeRates[currency].name;\n      const exchangeRate = Number(exchangeRates[currency].ask).toFixed(2);\n      const exchangeValue = (value * Number(exchangeRates[currency].ask)).toFixed(2);\n\n      const expenseValues = [\n        description, tag, method, Number(value).toFixed(2),\n        coin, exchangeRate, exchangeValue, 'Real',\n      ];\n\n      return (\n        <tr\n          key={ id }\n          className={ expenseSelected.id === id ? 'table-active table-sm' : 'table-sm' }\n        >\n          {expenseValues\n            .map((expenseValue, index) => (<td key={ index }>{expenseValue}</td>))}\n          <td>\n            <button\n              type=\"button\"\n              data-testid=\"edit-btn\"\n              className=\"btn btn-outline-info btn-sm\"\n              onClick={ () => this.pressEditBtn(expense) }\n            >\n              Editar\n            </button>\n\n            <button\n              type=\"button\"\n              data-testid=\"delete-btn\"\n              className=\"btn btn-outline-danger btn-sm\"\n              onClick={ () => removeExpenseById(id) }\n            >\n              Excluir\n            </button>\n\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <table className=\"table-container table table-dark table-sm table-hover\">\n        <thead>\n          <tr>\n            {[\n              'Descrição', 'Tag', 'Método de pagamento', 'Valor', 'Moeda',\n              'Câmbio utilizado', 'Valor convertido', 'Moeda de conversão',\n              'Editar/Excluir',\n            ]\n              .map((headTitle) => (<th key={ headTitle }>{headTitle}</th>))}\n          </tr>\n        </thead>\n        <tbody>\n          { this.renderExpenses() }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.array,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  expenseSelected: state.wallet.expenseSelected,\n  editBtn: state.wallet.editBtn,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  removeExpenseById: (id) => dispatch(removeExpense(id)),\n  activeEdition: (id) => dispatch(activeEditButton(id)),\n  disableEdition: () => dispatch((disableEditButton())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { fetchAPI, editExpense } from '../actions';\n\nimport Input from './Input';\nimport Select from './Select';\nimport ExpensesTable from './ExpensesTable';\n\nconst METHODS = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\nconst CATEGORIES = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n\nclass Expense extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n  }\n\n  componentDidMount() {\n    this.cleanFormsState();\n  }\n\n  cleanFormsState =() => {\n    this.setState((prevState) => ({\n      id: prevState.id === null ? 0 : prevState.id + 1,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    }));\n  }\n\n  inputHandler = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  sentExpenseToStore = () => {\n    const { addExpenses } = this.props;\n\n    addExpenses('addExpense', this.state);\n\n    this.cleanFormsState();\n  }\n\n  editExpenseToStore = () => {\n    const { expenseSelected, editingExpense } = this.props;\n\n    const editedExpense = { ...this.state, id: expenseSelected.id };\n\n    editingExpense(expenseSelected, editedExpense);\n\n    this.cleanFormsState();\n  }\n\n  getEditState = () => {\n    const { expenseSelected } = this.props;\n\n    const { value, description, currency, method, tag } = expenseSelected;\n\n    this.setState({ value, description, currency, method, tag });\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies, editBtn } = this.props;\n\n    return (\n      <>\n        <div className=\"expense-container\">\n          <Input\n            name=\"value\"\n            type=\"number\"\n            placeholder=\"Valor\"\n            onChange={ this.inputHandler }\n            value={ value }\n          />\n\n          <Select\n            name=\"currency\"\n            value={ currency }\n            onChange={ this.inputHandler }\n            options={ currencies }\n            placeholder=\"Moeda\"\n          />\n\n          <Select\n            name=\"method\"\n            value={ method }\n            onChange={ this.inputHandler }\n            options={ METHODS }\n            placeholder=\"Pagamento\"\n          />\n\n          <Select\n            name=\"tag\"\n            value={ tag }\n            onChange={ this.inputHandler }\n            options={ CATEGORIES }\n            placeholder=\"Categoria\"\n          />\n\n          <Input\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"Descrição\"\n            onChange={ this.inputHandler }\n            value={ description }\n          />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-warning m-2\"\n            onClick={ editBtn ? this.editExpenseToStore : this.sentExpenseToStore }\n          >\n            {`${editBtn ? 'Editar' : 'Adicionar'} despesa`}\n          </button>\n        </div>\n        <ExpensesTable getEditState={ this.getEditState } />\n      </>\n    );\n  }\n}\n\nExpense.propTypes = {\n  currencies: PropTypes.string,\n  editBtn: PropTypes.bool,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  editBtn: state.wallet.editBtn,\n  expenseSelected: state.wallet.expenseSelected,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenses: (type, expense, id) => dispatch(fetchAPI(type, expense, id)),\n  editingExpense: (expense, editInfo) => dispatch(editExpense(expense, editInfo)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Expense);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n// import { Redirect } from 'react-router-dom';\nimport { fetchAPI } from '../actions';\n\nimport Header from '../components/Header';\nimport Expense from '../components/Expense';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getApiResponse } = this.props;\n    getApiResponse('currencies');\n  }\n\n  render() {\n    // const { email } = this.props;\n    // const logged = email.length === 0;\n\n    return (\n      <div>\n        <Header />\n        <Expense />\n      </div>\n    );\n  }\n}\n\nWallet.propTypes = {\n  email: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getApiResponse: (currency) => dispatch(fetchAPI(currency)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './store';\n\nimport './styles/general.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename=\"trybe-project-trybewallet\">\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}